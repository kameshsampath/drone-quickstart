---
###########################        START ANCHOR  ###############################
commonEnv: &commonEnv
    DESTINATION_IMAGE:
        from_secret: destination_image
    IMAGE_REGISTRY:
      from_secret: image_registry
    IMAGE_REGISTRY_USER:
      from_secret: image_registry_username
    IMAGE_REGISTRY_PASSWORD:
      from_secret: image_registry_password

buildKit: &buildKit
    name: release-image
    image: moby/buildkit:rootless
    pull: if-not-present
    privileged: true
    commands:
      - mkdir -p "$HOME/.docker"
      - echo "{\"auths\":{\"https://index.docker.io/v1/\":{\"auth\":\"$(printf "%s:%s" "$IMAGE_REGISTRY_USER" "$IMAGE_REGISTRY_PASSWORD" | base64 | tr -d '\n')\"}}}" > "$HOME/.docker/config.json"
      - >- 
         buildctl-daemonless.sh build --frontend dockerfile.v0 
         --local context=/drone/src
         --local dockerfile=/drone/src/docker 
         --opt platform=linux/amd64,linux/arm64
         --export-cache type=registry,ref=$IMAGE_REGISTRY/$DESTINATION_IMAGE:buildcache
         --import-cache type=registry,ref=$IMAGE_REGISTRY/$DESTINATION_IMAGE:buildcache
         --output type=image,name=$DESTINATION_IMAGE:$DRONE_TAG,push=true
    environment:
      BUILDKITD_FLAGS: "--oci-worker-no-process-sandbox"
      << : *commonEnv

kaniko: &kaniko
    name: release-image
    image: gcr.io/kaniko-project/executor:debug
    pull: if-not-present
    commands:
      - mkdir -p "/kaniko/.docker"
      - echo "{\"auths\":{\"https://index.docker.io/v1/\":{\"auth\":\"$(printf "%s:%s" "$IMAGE_REGISTRY_USER" "$IMAGE_REGISTRY_PASSWORD" | base64 | tr -d '\n')\"}}}" > "/kaniko/.docker/config.json"
      - >
        /kaniko/executor 
        --context .
        --dockerfile docker/Dockerfile
        --destination "$IMAGE_REGISTRY/$DESTINATION_IMAGE:$DRONE_TAG"
        --customPlatform=linux/amd64
        --customPlatform=linux/arm64
        --cache=true
        --cache-repo="$IMAGE_REGISTRY/$DESTINATION_IMAGE"
        --use-new-run
    environment: *commonEnv
###########################        END ANCHOR  ###############################

kind: pipeline
type: docker
name: default

platform:
  os: linux
  arch: amd64

steps:
  - name: hello
    image: busybox
    commands:
      - echo "Hello world ${DRONE_TAG}"
    when:
      event:
        - tag

  - *kaniko
     when:
      event:
        - tag

  - name: create release
    image: docker.io/kameshsampath/drone-github-release-please:v0.0.2
    pull: if-not-exists
    settings:
      github_token:
        from_secret: github_token
      extra_options: |
        release-type: simple
        bump-patch-for-minor-pre-major: true
    when:
      event:
        - push
trigger:
  branch:
    - main
